#!/usr/bin/env python3

import asyncio
import datetime
import errno
import os
from os import path

import discord

import config
import channel_log

client = discord.Client()

@client.event
async def on_ready():
	print('logged in as', client.user.name, client.user.id)
	for channel in client.get_all_channels():
		if channel.type == discord.ChannelType.text:
			if channel.id != '109469702010478592': continue
			asyncio.ensure_future(get_history(channel))
			break

@client.event
async def on_message(message):
	channel_log.log_message(message)

async def get_history(channel):
	print('getting history for', channel.server.name, channel.name)
	channel_path = path.join(config.log_dir, channel.server.name, channel.name)
	try:
		os.makedirs(channel_path)
	except OSError as e:
		if e.errno != errno.EEXIST:
			raise
	last_message = discord.Message(id=0)
	while True:
		messages = await alist(client.logs_from(channel, after=last_message))
		if not messages:
			print('reached end of chat history')
			break
		messages.reverse() # messages come in reverse order
		for message in messages:
			channel_log.log_message(message)
		last_message = message

async def alist(aiterable):
	l = []
	async for item in aiterable:
		l.append(item)
	return l

if __name__ == '__main__':
	try:
		client.loop.run_until_complete(client.start(config.token))
	except KeyboardInterrupt:
		client.loop.run_until_complete(client.logout())
	finally:
		for cl in channel_log.channel_logs.values():
			cl.close()
		client.loop.close()
