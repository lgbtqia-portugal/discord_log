#!/usr/bin/env python3

import errno
import os
from os import path

import api_client
import channel_log
import config

def main():
	client = api_client.APIClient()
	channels = {}
	users = {}
	for channel in client.get_channels():
		channels[channel.id] = channel.name
		get_history(channel, users)
	channel_log.flush()

	channels_path = path.join(config.log_dir, sanitize_name(channel.guild_name), 'channels')
	with open(channels_path, 'bw') as f:
		for channel_id, name in channels.items():
			f.write(channel_id.encode() + b'|' + name.encode('utf-8') + b'\n')

	users_path = path.join(config.log_dir, sanitize_name(channel.guild_name), 'users')
	with open(users_path, 'bw') as f:
		for user_id, username in users.items():
			f.write(user_id.encode() + b'|' + username.encode('utf-8') + b'\n')

def get_history(channel, users):
	channel_path = path.join(sanitize_name(channel.guild_name), sanitize_name(channel.name))
	abspath = path.join(config.log_dir, channel_path)
	print('getting history for', channel_path)
	last_message_id = 0
	try:
		os.makedirs(abspath)
	except OSError as e:
		if e.errno != errno.EEXIST:
			raise
		log_files = os.listdir(abspath)
		if log_files:
			last_message_id = channel_log.last_message_id(path.join(abspath, max(log_files)))
			print('continuing from', last_message_id)

	client = api_client.APIClient()
	for message in client.get_messages(channel.id, after_id=last_message_id):
		channel_log.log_message(channel_path, message)
		user = message['author']
		users[user['id']] = user['username']
	print('reached end of chat history for', channel_path)

def sanitize_name(name):
	return name.replace('/', '_')

if __name__ == '__main__':
	main()
